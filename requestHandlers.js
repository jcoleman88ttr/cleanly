var exec = require("child_process").exec;var fs = require("fs");//Load Viewsvar homeView = fs.readFileSync('views/index.html');var loginView = fs.readFileSync('views/login.html');var menuView = fs.readFileSync('views/menu.html');var scheduleView = fs.readFileSync('views/schedule.html');var searchView = fs.readFileSync('views/search.html');var confirmationView = fs.readFileSync('views/confirmation.html');var registrationView = fs.readFileSync('views/register.html');function form(response, postData, db, params) {	console.log("Request handler 'Login Form' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(homeView);}function login(response, postData, db, params) {	console.log("Request handler 'Login' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(loginView);}function validate(response, postData, db, params) {	console.log("Request handler 'Menu' was called.");}function menu(response, postData, db, params) {	console.log("Request handler 'Menu' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(menuView);}	function schedule(response, postData, db, params) {	console.log("Request handler 'Schedule' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(scheduleView);}function search(response, postData, db, params) {	console.log("Request handler 'Search' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(searchView);}function confirm(response, postData, db, params) {	console.log("Request handler 'Confirmation' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(confirmationView);}function register(response, postData, db, params) {	console.log("Request handler 'Register' was called.");	response.writeHead(200, {"Content-Type": "text/html"});	response.end(registrationView);}function getUsers(response, postData, db, params) {	console.log("Request handler 'read' was called.");	db.query('SELECT * FROM users', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function getCleaners(response, postData, db, params) {	console.log("Request handler 'read' was called.");	var zip = params['zip'];	db.query('SELECT * FROM cleaners WHERE zip='+zip, function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function read(response, postData, db) {	console.log("Request handler 'read' was called.");	db.query('SELECT * FROM users WHERE id=1', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function main(response) {	console.log("Request handler 'main' was called.");}//Order Functions - CRUDfunction createorder(response, postData, db, params) {	console.log("Request handler 'Create Order' was called.");	var cleaner = params['cid'];	var user = params['uid'];		db.query('INSERT INTO orders (cleanerid,userid) VALUES ('+cleaner+','+user+')', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });		 console.log("Order Created Between Cleaner: #"+cleaner+" and User: #"+user);         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function deleteorder(response, postData, db, params) {	console.log("Request handler 'Delete Order' was called.");	db.query('DELETE * FROM orders WHERE id=', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });		 console.log("Order #"+id+" Deleted.");         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function updateorder(response, postData, db) {	console.log("Request handler 'Update Order' was called.");	db.query('DELETE * FROM orders WHERE id=', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function order(response, postData, db, params) {	console.log("Request handler 'Order' was called.");	var cleaner = params['cid'];	var user = params['uid'];	db.query('INSERT INTO orders (cleanerid,userid) VALUES ('+cleaner+','+user+')', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}function orders(response, postData, db) {	console.log("Request handler 'Get Orders' was called.");	db.query('SELECT * FROM orders', function (error, rows, fields) {         response.writeHead(200, {			'Content-Type': 'text/plain'         });         // Send data as JSON string.         // Rows variable holds the result of the query.         response.end(JSON.stringify(rows));    });}//Export Functions for Use in index.js fileexports.form = form;exports.login = login;exports.menu = menu;exports.schedule = schedule;exports.search = search;exports.confirm = confirm;exports.register = register;//Export Order Functionsexports.createorder = createorder;exports.deleteorder = deleteorder;exports.updateorder = updateorder;exports.order = order;exports.orders = orders;//Basic Export Functionsexports.main = main;